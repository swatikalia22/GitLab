variables:
  KUBE_CONTEXT: d6245/k8s-connection:k8s-connection

stages:
  - pre-build
  - build
  - deploy
  - destroy
# This Stage will create a package from Helm Chart that can push on package registry.
Extract-Data:
  stage: pre-build
  image: python
  script:
    - echo PACKAGE_VERSION=$(python3 $CI_PROJECT_DIR/package-name.py) >> build.env
    - echo PACKAGE_NAME=$(python3 $CI_PROJECT_DIR/chart-name.py) >> build.env

  artifacts:
    reports:
      dotenv: build.env 

# This Stage will create a package from Helm Chart that can push on package registry.
Publish-Helm-Package:
  stage: build
  image: 
    name: alpine/helm:latest
    entrypoint: ['']
  script:
    - echo "Build Started"
    - echo ${CI_PROJECT_ID}
    - echo $PACKAGE_NAME
    - echo $PACKAGE_VERSION
    - helm package $CI_PROJECT_DIR/$PACKAGE_NAME
    - 'curl --request POST --user gitlab-ci-token:$CI_REGISTRY_PASSWORD --form "chart=@${PACKAGE_VERSION}" "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/helm/api/stable/charts"'
    - echo "Chart Package Published to Gitlab package registry"

# This Stage will Deploy Helm Chart to K8S Cluster
Deploy-Helm-Chart:
  stage: deploy
  image: 
    name: dtzar/helm-kubectl
    entrypoint: ['']
  script:
    - echo "Deployment Started"
    - kubectl config get-contexts
   # - kubectl config use-context d6245/k8s-connection:k8s-connection
    - kubectl config use-context $KUBE_CONTEXT
    - helm repo add --username $CI_REGISTRY_USER --password $CI_REGISTRY_PASSWORD login-project "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/helm/stable"
    - helm repo update 
    #- helm repo list
    - helm upgrade --install ${PACKAGE_NAME} login-project/${PACKAGE_NAME}
    - kubectl get pods
    - kubectl get svc

Destroy-Chart:
  stage: destroy
  image: 
    name: dtzar/helm-kubectl
    entrypoint: ['']
  script:
    - echo "Destroy Started"
    - kubectl config use-context $KUBE_CONTEXT
    - helm repo add --username $CI_REGISTRY_USER --password $CI_REGISTRY_PASSWORD login-project "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/helm/stable"
    - helm repo update
    - helm repo list
    - helm uninstall ${PACKAGE_NAME}
    - kubectl get pods
    - kubectl get svc
  when: manual

